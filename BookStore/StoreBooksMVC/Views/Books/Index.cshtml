@using PagedList.Mvc
@model PagedList.IPagedList<DataAccessLayer.Book>
@*@model IEnumerable<DataAccessLayer.Book>*@
    
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<p>
    @Html.ActionLink("Create New", "Create")
</p>
@using (Ajax.BeginForm("Index", new AjaxOptions { UpdateTargetId = "table" }))
{
<div class="form-group-sm" style="    left: 32%;
    position: relative;
    margin-bottom: 3%;">
    <input class="form-control" id="search" name="SearchQuery" type="text" style="float:left" />
    <button type="submit" class="btn btn-primary"><span class="glyphicon glyphicon-search"> Search</span></button>
</div>
}

@if (Model.Count > 0)
{
<table class="table">
    <tr>
        @*<th>
            @Html.ActionLink("Title", "Index", new { sortedQuery = ViewBag.NameSortParm })
        </th>
        <th>
            Title                                                                                       //Sorting html
        </th>
        <th>
            @Html.ActionLink("Author", "Index", new { sortedQuery = ViewBag.NameSortParm })
        </th>
        <th>
            Author
        </th>*@

        <th>
           
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Title)*@
            Title
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Author.FullName)*@
            Author
        </th>
        @*@*<th>
            @Html.DisplayNameFor(model => model.Genre.GenreName)
            Genre
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
            Description
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PageCount)
            Pages
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Country.Country1)
            Country
        </th>*@
        <th>
            @*@Html.DisplayNameFor(model => model.Price)*@
            Price
        </th>
        <th></th>
    </tr>
    
@foreach (var item in Model)
{
    <tr>
        <td>
            <img src="~/Images/@item.ImagePath" alt="Img" width="100" height="150" />
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Author.FullName)
        </td>
        @*<td>
            @Html.DisplayFor(modelItem => item.Genre.GenreName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Description)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PageCount)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Country.Country1)
        </td>*@
        <td>
            @{
                decimal totalPrice = Convert.ToDecimal(item.Price + item.Country.PhoneCode);
               var price = totalPrice.ToString("C2");
            }
            @Html.DisplayFor(modelItem => price)
        </td>
        <td>
            @if (User.Identity.IsAuthenticated)
            {
                <a title="Edit" style="background-color: #333333;" class="btn" href="@Url.Action("Edit", new { id = @item.ID })">
                    <span class="glyphicon glyphicon-pencil " style="color: #f1c40f;"></span>
                </a>
                <a title="Delete" style="background-color:#333333;" class="btn" href="@Url.Action("Delete", new { id = @item.ID })">
                    <span class="glyphicon glyphicon-trash " style="color: #f1c40f;"></span>
                </a>
            }
            <a title="Details" style="background-color: #333333;" class="btn" href="@Url.Action("Details", new { id = @item.ID })">
                <span class="glyphicon glyphicon-list " style="color: #f1c40f;"></span>
            </a>
        </td>
    </tr>
}
</table>
}
else{ 
    @ViewBag.NotFoundMessage
}
<br />
@*Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount*@

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
<br/>